import com.android.build.gradle.tasks.PackageApplication

apply plugin: 'com.android.library'

android {
    compileSdkVersion project.ext.mycompileSdkVersion
    buildToolsVersion project.ext.mybuildToolsVersion


    buildTypes {
        release {
            minifyEnabled false
    //            proguardFiles getDefaultProguardFile('proguard-android.txt'),
    //                    'proguard-rules.pro'
    //            signingConfig signingConfigs.config

        }
        debug {
            debuggable true
        }
    }

    defaultConfig {
        minSdkVersion project.ext.myminSdkVersion
        targetSdkVersion project.ext.mytargetSdkVersion
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
            jniLibs.srcDir new File(buildDir, 'native-libs')
        }
    }
    productFlavors {
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:27.0.1'
    compile 'com.android.support:design:27.0.1'
    compile 'com.android.support:preference-v7:27.0.1'
    compile 'com.android.support:support-v4:27.0.1'
    compile project(':geopaparazzilibrary')
    compile project(':geopaparazzispatialitelibrary')
    compile project(':geopaparazzimapsforge')
    compile project(':wms_nww')
    compile project(':geopaparazzi_acrylicpaint')
}

task copyNativeLibs(type: Copy) {
    from(new File(project(':geopaparazzispatialitelibrary').projectDir, 'jniLibs')) {
        include 'armeabi/libjsqlite.so'
        include 'armeabi-v7a/libjsqlite.so'
        include 'x86/libjsqlite.so'
    }
    into new File(buildDir, 'native-libs')
}
tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }
clean.dependsOn 'cleanCopyNativeLibs'







repositories {
    google()
}